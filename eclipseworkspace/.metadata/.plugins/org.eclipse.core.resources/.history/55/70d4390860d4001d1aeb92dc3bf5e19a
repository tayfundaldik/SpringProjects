package com.mightyblaze.myfirstwebapp.todo;

import java.time.LocalDate;
import java.util.List;

import javax.naming.Binding;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import jakarta.validation.Valid;

@Controller
@SessionAttributes("name")
public class TodoControllerJpa {
	
	public TodoControllerJpa(TodoRep todoRep) {
		super();
		this.todoRep=todoRep;
	}
	
	private TodoRep todoRep;
	
	@RequestMapping("list-todos")
	public String listAllTodos(ModelMap model) {
		String username = getLoggedInUsername(model);
	
		List <Todo> todos = todoRep.findByUsername(username);
		model.addAttribute("todos", todos);
		return "listTodos";
	}

	@RequestMapping("delete-todo")
	public String DeleteTodo(@RequestParam int id) { 
		todoService.deleteById(id);
		todoRep.deleteById(id);
		return "redirect:list-todos";

	}
	@RequestMapping(value= "update-todo", method = RequestMethod.GET)
	public String showUpdateTodo(@RequestParam int id ,ModelMap model) { 
		Todo todo = todoRep.findById(id).get();
		model.addAttribute("todo",todo);
		return "todo";
		
	}
	@RequestMapping(value= "add-todo",method=RequestMethod.GET)
	public String ShowNewTodoPage(ModelMap model) {
		String username = getLoggedInUsername(model);
		Todo todo = new Todo(0,username ,"", LocalDate.now().plusYears(1), false);
		model.put("todo", todo);
		return "todo";
	}
	@RequestMapping(value= "add-todo",method=RequestMethod.POST)
	public String AddNewTodo( ModelMap model,@Valid Todo todo,BindingResult result) {
		if(result.hasErrors()) {
			return "todo";
		}
		String username = getLoggedInUsername(model);
		todo.setUsername(username);
		todoRep.save(todo);
		//todoService.addTodo(username, todo.getDescription(), todo.getTargetDate(), todo.isDone());
		return "redirect:list-todos";
	}
	@RequestMapping(value= "update-todo",method=RequestMethod.POST)
	public String UpdateTodo( ModelMap model,@Valid Todo todo,BindingResult result) {
		if(result.hasErrors()) {
			return "todo";
		}
		String username = getLoggedInUsername(model);
		todo.setUsername(username);
		todoRep.save(todo);
		return "redirect:list-todos";
	}
	private String getLoggedInUsername(ModelMap model) {
		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		return (String) model.get("name");
	}
}
